import { PropType } from 'vue';
import { ItemType } from '../types';
declare const _default: import("vue").DefineComponent<{
    /**
     * 图片点击是否关闭
     */
    photoClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 背景点击是否关闭
     */
    maskClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 箭头切换是否需要过渡
     */
    shouldTransition: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 默认背景透明度
     */
    defaultBackdropOpacity: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * 是否循环显示预览图
     */
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 下载图片方法，不传使用内置的下载方法
     */
    downloadMethod: {
        type: PropType<(item: ItemType) => void | null>;
        default: null;
    };
}, {
    items: import("vue").Ref<ItemType[]>;
    updateItem: import("../types").UpdateItemType;
    removeItem: import("../types").RemoveItemType;
    visible: import("vue").Ref<boolean>;
    handleHide: () => void;
    handleShow: import("../types").HandleShowType;
    index: import("vue").Ref<number>;
    updateIndex: (newIndex: number) => void;
}, unknown, {}, {
    handleClickPhoto(): void;
    handleClickMask(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("indexChange" | "visibleChange")[], "indexChange" | "visibleChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * 图片点击是否关闭
     */
    photoClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 背景点击是否关闭
     */
    maskClosable: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 箭头切换是否需要过渡
     */
    shouldTransition: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 默认背景透明度
     */
    defaultBackdropOpacity: {
        type: NumberConstructor;
        default: number;
    };
    /**
     * 是否循环显示预览图
     */
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 下载图片方法，不传使用内置的下载方法
     */
    downloadMethod: {
        type: PropType<(item: ItemType) => void | null>;
        default: null;
    };
}>> & {
    onIndexChange?: ((...args: any[]) => any) | undefined;
    onVisibleChange?: ((...args: any[]) => any) | undefined;
}, {
    photoClosable: boolean;
    maskClosable: boolean;
    shouldTransition: boolean;
    defaultBackdropOpacity: number;
    loop: boolean;
    downloadMethod: (item: ItemType) => void | null;
}>;
export default _default;
